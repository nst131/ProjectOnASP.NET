// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace PresentationYandexMusic.Areas.Admin.Controllers
{
    public partial class AdminGenreController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AdminGenreController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }


        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AdminGenreController Actions { get { return MVC.Admin.AdminGenre; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Admin";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "AdminGenre";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "AdminGenre";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string CreateGenre = "CreateGenre";
            public readonly string FormGenreSuccess = "FormGenreSuccess";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string CreateGenre = "CreateGenre";
            public const string FormGenreSuccess = "FormGenreSuccess";
        }


        static readonly ActionParamsClass_CreateGenre s_params_CreateGenre = new ActionParamsClass_CreateGenre();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateGenre CreateGenreParams { get { return s_params_CreateGenre; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateGenre
        {
            public readonly string genreModel = "genreModel";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string CreateGenre = "CreateGenre";
                public readonly string FormCreateGenre = "FormCreateGenre";
                public readonly string FormGenreSuccess = "FormGenreSuccess";
            }
            public readonly string CreateGenre = "~/Areas/Admin/Views/AdminGenre/CreateGenre.cshtml";
            public readonly string FormCreateGenre = "~/Areas/Admin/Views/AdminGenre/FormCreateGenre.cshtml";
            public readonly string FormGenreSuccess = "~/Areas/Admin/Views/AdminGenre/FormGenreSuccess.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AdminGenreController : PresentationYandexMusic.Areas.Admin.Controllers.AdminGenreController
    {
        public T4MVC_AdminGenreController() : base(Dummy.Instance) { }

        [NonAction]
        partial void CreateGenreOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult CreateGenre()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.CreateGenre);
            CreateGenreOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateGenreOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, PresentationYandexMusic.Areas.Admin.ViewModel.Genre.CreateGenreViewModel genreModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateGenre(PresentationYandexMusic.Areas.Admin.ViewModel.Genre.CreateGenreViewModel genreModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateGenre);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "genreModel", genreModel);
            CreateGenreOverride(callInfo, genreModel);
            return callInfo;
        }

        [NonAction]
        partial void FormGenreSuccessOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult FormGenreSuccess()
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.FormGenreSuccess);
            FormGenreSuccessOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
