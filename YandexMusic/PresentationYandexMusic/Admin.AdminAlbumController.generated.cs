// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace PresentationYandexMusic.Areas.Admin.Controllers
{
    public partial class AdminAlbumController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AdminAlbumController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ViewResult EditAlbum()
        {
            return new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.EditAlbum);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteAlbum()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteAlbum);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FileResult GetAlbumImage()
        {
            return new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.GetAlbumImage);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AdminAlbumController Actions { get { return MVC.Admin.AdminAlbum; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Admin";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "AdminAlbum";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "AdminAlbum";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string CreateAlbum = "CreateAlbum";
            public readonly string FormAlbumSuccess = "FormAlbumSuccess";
            public readonly string EditAlbum = "EditAlbum";
            public readonly string DeleteAlbum = "DeleteAlbum";
            public readonly string GetAlbumImage = "GetAlbumImage";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string CreateAlbum = "CreateAlbum";
            public const string FormAlbumSuccess = "FormAlbumSuccess";
            public const string EditAlbum = "EditAlbum";
            public const string DeleteAlbum = "DeleteAlbum";
            public const string GetAlbumImage = "GetAlbumImage";
        }


        static readonly ActionParamsClass_CreateAlbum s_params_CreateAlbum = new ActionParamsClass_CreateAlbum();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateAlbum CreateAlbumParams { get { return s_params_CreateAlbum; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateAlbum
        {
            public readonly string albumView = "albumView";
        }
        static readonly ActionParamsClass_EditAlbum s_params_EditAlbum = new ActionParamsClass_EditAlbum();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditAlbum EditAlbumParams { get { return s_params_EditAlbum; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditAlbum
        {
            public readonly string id = "id";
            public readonly string albumView = "albumView";
        }
        static readonly ActionParamsClass_DeleteAlbum s_params_DeleteAlbum = new ActionParamsClass_DeleteAlbum();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteAlbum DeleteAlbumParams { get { return s_params_DeleteAlbum; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteAlbum
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_GetAlbumImage s_params_GetAlbumImage = new ActionParamsClass_GetAlbumImage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAlbumImage GetAlbumImageParams { get { return s_params_GetAlbumImage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAlbumImage
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string CreateAlbum = "CreateAlbum";
                public readonly string DeleteAlbum = "DeleteAlbum";
                public readonly string EditAlbum = "EditAlbum";
                public readonly string FormAlbumSuccess = "FormAlbumSuccess";
                public readonly string FormCreateAlbum = "FormCreateAlbum";
                public readonly string FormEditAlbum = "FormEditAlbum";
            }
            public readonly string CreateAlbum = "~/Areas/Admin/Views/AdminAlbum/CreateAlbum.cshtml";
            public readonly string DeleteAlbum = "~/Areas/Admin/Views/AdminAlbum/DeleteAlbum.cshtml";
            public readonly string EditAlbum = "~/Areas/Admin/Views/AdminAlbum/EditAlbum.cshtml";
            public readonly string FormAlbumSuccess = "~/Areas/Admin/Views/AdminAlbum/FormAlbumSuccess.cshtml";
            public readonly string FormCreateAlbum = "~/Areas/Admin/Views/AdminAlbum/FormCreateAlbum.cshtml";
            public readonly string FormEditAlbum = "~/Areas/Admin/Views/AdminAlbum/FormEditAlbum.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AdminAlbumController : PresentationYandexMusic.Areas.Admin.Controllers.AdminAlbumController
    {
        public T4MVC_AdminAlbumController() : base(Dummy.Instance) { }

        [NonAction]
        partial void CreateAlbumOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult CreateAlbum()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.CreateAlbum);
            CreateAlbumOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateAlbumOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, PresentationYandexMusic.Areas.Admin.ViewModel.Album.CreateAlbumViewModel albumView);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateAlbum(PresentationYandexMusic.Areas.Admin.ViewModel.Album.CreateAlbumViewModel albumView)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateAlbum);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "albumView", albumView);
            CreateAlbumOverride(callInfo, albumView);
            return callInfo;
        }

        [NonAction]
        partial void FormAlbumSuccessOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult FormAlbumSuccess()
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.FormAlbumSuccess);
            FormAlbumSuccessOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void EditAlbumOverride(T4MVC_System_Web_Mvc_ViewResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ViewResult EditAlbum(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.EditAlbum);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            EditAlbumOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void EditAlbumOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, PresentationYandexMusic.Areas.Admin.ViewModel.Album.EditAlbumViewModel albumView);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditAlbum(PresentationYandexMusic.Areas.Admin.ViewModel.Album.EditAlbumViewModel albumView)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditAlbum);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "albumView", albumView);
            EditAlbumOverride(callInfo, albumView);
            return callInfo;
        }

        [NonAction]
        partial void DeleteAlbumOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteAlbum(int? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteAlbum);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteAlbumOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void DeleteAlbumOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteAlbum(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteAlbum);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteAlbumOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void GetAlbumImageOverride(T4MVC_System_Web_Mvc_FileResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.FileResult GetAlbumImage(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.GetAlbumImage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            GetAlbumImageOverride(callInfo, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
