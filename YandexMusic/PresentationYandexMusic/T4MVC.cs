// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass Admin { get { return s_Admin; } }
    public static PresentationYandexMusic.Controllers.AlbumController Album = new PresentationYandexMusic.Controllers.T4MVC_AlbumController();
    public static PresentationYandexMusic.Controllers.GenreController Genre = new PresentationYandexMusic.Controllers.T4MVC_GenreController();
    public static PresentationYandexMusic.Controllers.HomeController Home = new PresentationYandexMusic.Controllers.T4MVC_HomeController();
    public static PresentationYandexMusic.Controllers.SingerController Singer = new PresentationYandexMusic.Controllers.T4MVC_SingerController();
    public static PresentationYandexMusic.Controllers.TrackController Track = new PresentationYandexMusic.Controllers.T4MVC_TrackController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass
    {
        public readonly string Name = "Admin";
        public PresentationYandexMusic.Areas.Admin.Controllers.AdminAlbumController AdminAlbum = new PresentationYandexMusic.Areas.Admin.Controllers.T4MVC_AdminAlbumController();
        public PresentationYandexMusic.Areas.Admin.Controllers.AdminController Admin = new PresentationYandexMusic.Areas.Admin.Controllers.T4MVC_AdminController();
        public PresentationYandexMusic.Areas.Admin.Controllers.AdminGenreController AdminGenre = new PresentationYandexMusic.Areas.Admin.Controllers.T4MVC_AdminGenreController();
        public PresentationYandexMusic.Areas.Admin.Controllers.AdminPlaylistController AdminPlaylist = new PresentationYandexMusic.Areas.Admin.Controllers.T4MVC_AdminPlaylistController();
        public PresentationYandexMusic.Areas.Admin.Controllers.AdminSingerController AdminSinger = new PresentationYandexMusic.Areas.Admin.Controllers.T4MVC_AdminSingerController();
        public PresentationYandexMusic.Areas.Admin.Controllers.AdminTrackController AdminTrack = new PresentationYandexMusic.Areas.Admin.Controllers.T4MVC_AdminTrackController();
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
}

#pragma warning disable 0436
namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}
#pragma warning restore 0436

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_FileResult : System.Web.Mvc.FileResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_FileResult(string area, string controller, string action, string protocol = null): base(" ")
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    protected override void WriteFile(System.Web.HttpResponseBase response) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ViewResult : System.Web.Mvc.ViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_PartialViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string bootstrap_bundle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.bundle.min.js") ? Url("bootstrap.bundle.min.js") : Url("bootstrap.bundle.js");
        public static readonly string bootstrap_bundle_js_map = Url("bootstrap.bundle.js.map");
        public static readonly string bootstrap_bundle_min_js = Url("bootstrap.bundle.min.js");
        public static readonly string bootstrap_bundle_min_js_map = Url("bootstrap.bundle.min.js.map");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_js_map = Url("bootstrap.js.map");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string bootstrap_min_js_map = Url("bootstrap.min.js.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class esm {
            public const string UrlPath = "~/Scripts/esm";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string popper_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper-utils.min.js") ? Url("popper-utils.min.js") : Url("popper-utils.js");
            public static readonly string popper_utils_js_map = Url("popper-utils.js.map");
            public static readonly string popper_utils_min_js = Url("popper-utils.min.js");
            public static readonly string popper_utils_min_js_map = Url("popper-utils.min.js.map");
            public static readonly string popper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper.min.js") ? Url("popper.min.js") : Url("popper.js");
            public static readonly string popper_js_map = Url("popper.js.map");
            public static readonly string popper_min_js = Url("popper.min.js");
            public static readonly string popper_min_js_map = Url("popper.min.js.map");
        }
    
        public static readonly string index_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/index.d.min.js") ? Url("index.d.min.js") : Url("index.d.js");
        public static readonly string index_js_flow = Url("index.js.flow");
        public static readonly string jquery_3_4_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.4.1.intellisense.min.js") ? Url("jquery-3.4.1.intellisense.min.js") : Url("jquery-3.4.1.intellisense.js");
        public static readonly string jquery_3_4_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.4.1.min.js") ? Url("jquery-3.4.1.min.js") : Url("jquery-3.4.1.js");
        public static readonly string jquery_3_4_1_min_js = Url("jquery-3.4.1.min.js");
        public static readonly string jquery_3_4_1_min_map = Url("jquery-3.4.1.min.map");
        public static readonly string jquery_3_4_1_slim_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.4.1.slim.min.js") ? Url("jquery-3.4.1.slim.min.js") : Url("jquery-3.4.1.slim.js");
        public static readonly string jquery_3_4_1_slim_min_js = Url("jquery-3.4.1.slim.min.js");
        public static readonly string jquery_3_4_1_slim_min_map = Url("jquery-3.4.1.slim.min.map");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string JSButtonPlayMusic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/JSButtonPlayMusic.min.js") ? Url("JSButtonPlayMusic.min.js") : Url("JSButtonPlayMusic.js");
        public static readonly string JSCheckbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/JSCheckbox.min.js") ? Url("JSCheckbox.min.js") : Url("JSCheckbox.js");
        public static readonly string JSTrackCreate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/JSTrackCreate.min.js") ? Url("JSTrackCreate.min.js") : Url("JSTrackCreate.js");
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
        public static readonly string popper_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper-utils.min.js") ? Url("popper-utils.min.js") : Url("popper-utils.js");
        public static readonly string popper_utils_js_map = Url("popper-utils.js.map");
        public static readonly string popper_utils_min_js = Url("popper-utils.min.js");
        public static readonly string popper_utils_min_js_map = Url("popper-utils.min.js.map");
        public static readonly string popper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper.min.js") ? Url("popper.min.js") : Url("popper.js");
        public static readonly string popper_js_map = Url("popper.js.map");
        public static readonly string popper_min_js = Url("popper.min.js");
        public static readonly string popper_min_js_map = Url("popper.min.js.map");
        public static readonly string README_md = Url("README.md");
        public static readonly string ScriptSpinnerHidden_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ScriptSpinnerHidden.min.js") ? Url("ScriptSpinnerHidden.min.js") : Url("ScriptSpinnerHidden.js");
        public static readonly string ScriptSpinnerVisible_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ScriptSpinnerVisible.min.js") ? Url("ScriptSpinnerVisible.min.js") : Url("ScriptSpinnerVisible.js");
        public static readonly string SolutionAjaxForm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/SolutionAjaxForm.min.js") ? Url("SolutionAjaxForm.min.js") : Url("SolutionAjaxForm.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class src {
            public const string UrlPath = "~/Scripts/src";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string index_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/index.min.js") ? Url("index.min.js") : Url("index.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class methods {
                public const string UrlPath = "~/Scripts/src/methods";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string defaults_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/defaults.min.js") ? Url("defaults.min.js") : Url("defaults.js");
                public static readonly string destroy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/destroy.min.js") ? Url("destroy.min.js") : Url("destroy.js");
                public static readonly string disableEventListeners_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/disableEventListeners.min.js") ? Url("disableEventListeners.min.js") : Url("disableEventListeners.js");
                public static readonly string enableEventListeners_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/enableEventListeners.min.js") ? Url("enableEventListeners.min.js") : Url("enableEventListeners.js");
                public static readonly string placements_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/placements.min.js") ? Url("placements.min.js") : Url("placements.js");
                public static readonly string update_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/update.min.js") ? Url("update.min.js") : Url("update.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class modifiers {
                public const string UrlPath = "~/Scripts/src/modifiers";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string applyStyle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/applyStyle.min.js") ? Url("applyStyle.min.js") : Url("applyStyle.js");
                public static readonly string arrow_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/arrow.min.js") ? Url("arrow.min.js") : Url("arrow.js");
                public static readonly string computeStyle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/computeStyle.min.js") ? Url("computeStyle.min.js") : Url("computeStyle.js");
                public static readonly string flip_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/flip.min.js") ? Url("flip.min.js") : Url("flip.js");
                public static readonly string hide_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/hide.min.js") ? Url("hide.min.js") : Url("hide.js");
                public static readonly string index_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/index.min.js") ? Url("index.min.js") : Url("index.js");
                public static readonly string inner_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/inner.min.js") ? Url("inner.min.js") : Url("inner.js");
                public static readonly string keepTogether_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/keepTogether.min.js") ? Url("keepTogether.min.js") : Url("keepTogether.js");
                public static readonly string offset_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/offset.min.js") ? Url("offset.min.js") : Url("offset.js");
                public static readonly string preventOverflow_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/preventOverflow.min.js") ? Url("preventOverflow.min.js") : Url("preventOverflow.js");
                public static readonly string shift_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/shift.min.js") ? Url("shift.min.js") : Url("shift.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class utils {
                public const string UrlPath = "~/Scripts/src/utils";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string clockwise_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/clockwise.min.js") ? Url("clockwise.min.js") : Url("clockwise.js");
                public static readonly string computeAutoPlacement_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/computeAutoPlacement.min.js") ? Url("computeAutoPlacement.min.js") : Url("computeAutoPlacement.js");
                public static readonly string debounce_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/debounce.min.js") ? Url("debounce.min.js") : Url("debounce.js");
                public static readonly string find_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/find.min.js") ? Url("find.min.js") : Url("find.js");
                public static readonly string findCommonOffsetParent_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/findCommonOffsetParent.min.js") ? Url("findCommonOffsetParent.min.js") : Url("findCommonOffsetParent.js");
                public static readonly string findIndex_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/findIndex.min.js") ? Url("findIndex.min.js") : Url("findIndex.js");
                public static readonly string getBordersSize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getBordersSize.min.js") ? Url("getBordersSize.min.js") : Url("getBordersSize.js");
                public static readonly string getBoundaries_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getBoundaries.min.js") ? Url("getBoundaries.min.js") : Url("getBoundaries.js");
                public static readonly string getBoundingClientRect_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getBoundingClientRect.min.js") ? Url("getBoundingClientRect.min.js") : Url("getBoundingClientRect.js");
                public static readonly string getClientRect_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getClientRect.min.js") ? Url("getClientRect.min.js") : Url("getClientRect.js");
                public static readonly string getFixedPositionOffsetParent_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getFixedPositionOffsetParent.min.js") ? Url("getFixedPositionOffsetParent.min.js") : Url("getFixedPositionOffsetParent.js");
                public static readonly string getOffsetParent_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getOffsetParent.min.js") ? Url("getOffsetParent.min.js") : Url("getOffsetParent.js");
                public static readonly string getOffsetRect_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getOffsetRect.min.js") ? Url("getOffsetRect.min.js") : Url("getOffsetRect.js");
                public static readonly string getOffsetRectRelativeToArbitraryNode_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getOffsetRectRelativeToArbitraryNode.min.js") ? Url("getOffsetRectRelativeToArbitraryNode.min.js") : Url("getOffsetRectRelativeToArbitraryNode.js");
                public static readonly string getOppositePlacement_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getOppositePlacement.min.js") ? Url("getOppositePlacement.min.js") : Url("getOppositePlacement.js");
                public static readonly string getOppositeVariation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getOppositeVariation.min.js") ? Url("getOppositeVariation.min.js") : Url("getOppositeVariation.js");
                public static readonly string getOuterSizes_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getOuterSizes.min.js") ? Url("getOuterSizes.min.js") : Url("getOuterSizes.js");
                public static readonly string getParentNode_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getParentNode.min.js") ? Url("getParentNode.min.js") : Url("getParentNode.js");
                public static readonly string getPopperOffsets_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getPopperOffsets.min.js") ? Url("getPopperOffsets.min.js") : Url("getPopperOffsets.js");
                public static readonly string getReferenceNode_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getReferenceNode.min.js") ? Url("getReferenceNode.min.js") : Url("getReferenceNode.js");
                public static readonly string getReferenceOffsets_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getReferenceOffsets.min.js") ? Url("getReferenceOffsets.min.js") : Url("getReferenceOffsets.js");
                public static readonly string getRoot_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getRoot.min.js") ? Url("getRoot.min.js") : Url("getRoot.js");
                public static readonly string getRoundedOffsets_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getRoundedOffsets.min.js") ? Url("getRoundedOffsets.min.js") : Url("getRoundedOffsets.js");
                public static readonly string getScroll_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getScroll.min.js") ? Url("getScroll.min.js") : Url("getScroll.js");
                public static readonly string getScrollParent_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getScrollParent.min.js") ? Url("getScrollParent.min.js") : Url("getScrollParent.js");
                public static readonly string getStyleComputedProperty_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getStyleComputedProperty.min.js") ? Url("getStyleComputedProperty.min.js") : Url("getStyleComputedProperty.js");
                public static readonly string getSupportedPropertyName_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getSupportedPropertyName.min.js") ? Url("getSupportedPropertyName.min.js") : Url("getSupportedPropertyName.js");
                public static readonly string getViewportOffsetRectRelativeToArtbitraryNode_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getViewportOffsetRectRelativeToArtbitraryNode.min.js") ? Url("getViewportOffsetRectRelativeToArtbitraryNode.min.js") : Url("getViewportOffsetRectRelativeToArtbitraryNode.js");
                public static readonly string getWindow_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getWindow.min.js") ? Url("getWindow.min.js") : Url("getWindow.js");
                public static readonly string getWindowSizes_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/getWindowSizes.min.js") ? Url("getWindowSizes.min.js") : Url("getWindowSizes.js");
                public static readonly string includeScroll_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/includeScroll.min.js") ? Url("includeScroll.min.js") : Url("includeScroll.js");
                public static readonly string index_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/index.min.js") ? Url("index.min.js") : Url("index.js");
                public static readonly string isBrowser_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/isBrowser.min.js") ? Url("isBrowser.min.js") : Url("isBrowser.js");
                public static readonly string isFixed_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/isFixed.min.js") ? Url("isFixed.min.js") : Url("isFixed.js");
                public static readonly string isFunction_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/isFunction.min.js") ? Url("isFunction.min.js") : Url("isFunction.js");
                public static readonly string isIE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/isIE.min.js") ? Url("isIE.min.js") : Url("isIE.js");
                public static readonly string isModifierEnabled_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/isModifierEnabled.min.js") ? Url("isModifierEnabled.min.js") : Url("isModifierEnabled.js");
                public static readonly string isModifierRequired_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/isModifierRequired.min.js") ? Url("isModifierRequired.min.js") : Url("isModifierRequired.js");
                public static readonly string isNumeric_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/isNumeric.min.js") ? Url("isNumeric.min.js") : Url("isNumeric.js");
                public static readonly string isOffsetContainer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/isOffsetContainer.min.js") ? Url("isOffsetContainer.min.js") : Url("isOffsetContainer.js");
                public static readonly string removeEventListeners_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/removeEventListeners.min.js") ? Url("removeEventListeners.min.js") : Url("removeEventListeners.js");
                public static readonly string runModifiers_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/runModifiers.min.js") ? Url("runModifiers.min.js") : Url("runModifiers.js");
                public static readonly string setAttributes_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/setAttributes.min.js") ? Url("setAttributes.min.js") : Url("setAttributes.js");
                public static readonly string setStyles_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/setStyles.min.js") ? Url("setStyles.min.js") : Url("setStyles.js");
                public static readonly string setupEventListeners_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/setupEventListeners.min.js") ? Url("setupEventListeners.min.js") : Url("setupEventListeners.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class umd {
            public const string UrlPath = "~/Scripts/umd";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string popper_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper-utils.min.js") ? Url("popper-utils.min.js") : Url("popper-utils.js");
            public static readonly string popper_utils_js_map = Url("popper-utils.js.map");
            public static readonly string popper_utils_min_js = Url("popper-utils.min.js");
            public static readonly string popper_utils_min_js_map = Url("popper-utils.min.js.map");
            public static readonly string popper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/popper.min.js") ? Url("popper.min.js") : Url("popper.js");
            public static readonly string popper_js_flow = Url("popper.js.flow");
            public static readonly string popper_js_map = Url("popper.js.map");
            public static readonly string popper_min_js = Url("popper.min.js");
            public static readonly string popper_min_js_map = Url("popper.min.js.map");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string bootstrap_grid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-grid.min.css") ? Url("bootstrap-grid.min.css") : Url("bootstrap-grid.css");
        public static readonly string bootstrap_grid_css_map = Url("bootstrap-grid.css.map");
        public static readonly string bootstrap_grid_min_css = Url("bootstrap-grid.min.css");
        public static readonly string bootstrap_grid_min_css_map = Url("bootstrap-grid.min.css.map");
        public static readonly string bootstrap_reboot_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-reboot.min.css") ? Url("bootstrap-reboot.min.css") : Url("bootstrap-reboot.css");
        public static readonly string bootstrap_reboot_css_map = Url("bootstrap-reboot.css.map");
        public static readonly string bootstrap_reboot_min_css = Url("bootstrap-reboot.min.css");
        public static readonly string bootstrap_reboot_min_css_map = Url("bootstrap-reboot.min.css.map");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
        public static readonly string ColorValidation_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ColorValidation.min.css") ? Url("ColorValidation.min.css") : Url("ColorValidation.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            public const string UrlPath = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class animate_css {
                public const string UrlPath = "~/Content/css/animate.css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string animate_min_css = Url("animate.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class bootstrap {
                public const string UrlPath = "~/Content/css/bootstrap";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class dist {
                    public const string UrlPath = "~/Content/css/bootstrap/dist";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        public const string UrlPath = "~/Content/css/bootstrap/dist/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
                        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
                        public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class scss {
                    public const string UrlPath = "~/Content/css/bootstrap/scss";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string _alert_scss = Url("_alert.scss");
                    public static readonly string _animation_scss = Url("_animation.scss");
                    public static readonly string _breadcrumb_scss = Url("_breadcrumb.scss");
                    public static readonly string _button_group_scss = Url("_button-group.scss");
                    public static readonly string _buttons_scss = Url("_buttons.scss");
                    public static readonly string _card_scss = Url("_card.scss");
                    public static readonly string _carousel_scss = Url("_carousel.scss");
                    public static readonly string _close_scss = Url("_close.scss");
                    public static readonly string _code_scss = Url("_code.scss");
                    public static readonly string _custom_forms_scss = Url("_custom-forms.scss");
                    public static readonly string _custom_scss = Url("_custom.scss");
                    public static readonly string _dropdown_scss = Url("_dropdown.scss");
                    public static readonly string _forms_scss = Url("_forms.scss");
                    public static readonly string _grid_scss = Url("_grid.scss");
                    public static readonly string _images_scss = Url("_images.scss");
                    public static readonly string _input_group_scss = Url("_input-group.scss");
                    public static readonly string _jumbotron_scss = Url("_jumbotron.scss");
                    public static readonly string _labels_scss = Url("_labels.scss");
                    public static readonly string _list_group_scss = Url("_list-group.scss");
                    public static readonly string _media_scss = Url("_media.scss");
                    public static readonly string _mixins_scss = Url("_mixins.scss");
                    public static readonly string _modal_scss = Url("_modal.scss");
                    public static readonly string _nav_scss = Url("_nav.scss");
                    public static readonly string _navbar_scss = Url("_navbar.scss");
                    public static readonly string _normalize_scss = Url("_normalize.scss");
                    public static readonly string _pager_scss = Url("_pager.scss");
                    public static readonly string _pagination_scss = Url("_pagination.scss");
                    public static readonly string _popover_scss = Url("_popover.scss");
                    public static readonly string _print_scss = Url("_print.scss");
                    public static readonly string _progress_scss = Url("_progress.scss");
                    public static readonly string _reboot_scss = Url("_reboot.scss");
                    public static readonly string _responsive_embed_scss = Url("_responsive-embed.scss");
                    public static readonly string _tables_scss = Url("_tables.scss");
                    public static readonly string _tags_scss = Url("_tags.scss");
                    public static readonly string _tooltip_scss = Url("_tooltip.scss");
                    public static readonly string _type_scss = Url("_type.scss");
                    public static readonly string _utilities_background_scss = Url("_utilities-background.scss");
                    public static readonly string _utilities_responsive_scss = Url("_utilities-responsive.scss");
                    public static readonly string _utilities_spacing_scss = Url("_utilities-spacing.scss");
                    public static readonly string _utilities_scss = Url("_utilities.scss");
                    public static readonly string _variables_scss = Url("_variables.scss");
                    public static readonly string bootstrap_flex_scss = Url("bootstrap-flex.scss");
                    public static readonly string bootstrap_grid_scss = Url("bootstrap-grid.scss");
                    public static readonly string bootstrap_reboot_scss = Url("bootstrap-reboot.scss");
                    public static readonly string bootstrap_scss = Url("bootstrap.scss");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class mixins {
                        public const string UrlPath = "~/Content/css/bootstrap/scss/mixins";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string _alert_scss = Url("_alert.scss");
                        public static readonly string _background_variant_scss = Url("_background-variant.scss");
                        public static readonly string _border_radius_scss = Url("_border-radius.scss");
                        public static readonly string _breakpoints_scss = Url("_breakpoints.scss");
                        public static readonly string _buttons_scss = Url("_buttons.scss");
                        public static readonly string _cards_scss = Url("_cards.scss");
                        public static readonly string _center_block_scss = Url("_center-block.scss");
                        public static readonly string _clearfix_scss = Url("_clearfix.scss");
                        public static readonly string _forms_scss = Url("_forms.scss");
                        public static readonly string _gradients_scss = Url("_gradients.scss");
                        public static readonly string _grid_framework_scss = Url("_grid-framework.scss");
                        public static readonly string _grid_scss = Url("_grid.scss");
                        public static readonly string _hover_scss = Url("_hover.scss");
                        public static readonly string _image_scss = Url("_image.scss");
                        public static readonly string _label_scss = Url("_label.scss");
                        public static readonly string _list_group_scss = Url("_list-group.scss");
                        public static readonly string _lists_scss = Url("_lists.scss");
                        public static readonly string _nav_divider_scss = Url("_nav-divider.scss");
                        public static readonly string _navbar_align_scss = Url("_navbar-align.scss");
                        public static readonly string _pagination_scss = Url("_pagination.scss");
                        public static readonly string _progress_scss = Url("_progress.scss");
                        public static readonly string _pulls_scss = Url("_pulls.scss");
                        public static readonly string _reset_filter_scss = Url("_reset-filter.scss");
                        public static readonly string _reset_text_scss = Url("_reset-text.scss");
                        public static readonly string _resize_scss = Url("_resize.scss");
                        public static readonly string _screen_reader_scss = Url("_screen-reader.scss");
                        public static readonly string _size_scss = Url("_size.scss");
                        public static readonly string _tab_focus_scss = Url("_tab-focus.scss");
                        public static readonly string _table_row_scss = Url("_table-row.scss");
                        public static readonly string _tag_scss = Url("_tag.scss");
                        public static readonly string _text_emphasis_scss = Url("_text-emphasis.scss");
                        public static readonly string _text_hide_scss = Url("_text-hide.scss");
                        public static readonly string _text_truncate_scss = Url("_text-truncate.scss");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class utilities {
                        public const string UrlPath = "~/Content/css/bootstrap/scss/utilities";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string _background_scss = Url("_background.scss");
                        public static readonly string _clearfix_scss = Url("_clearfix.scss");
                        public static readonly string _display_scss = Url("_display.scss");
                        public static readonly string _flex_scss = Url("_flex.scss");
                        public static readonly string _pulls_scss = Url("_pulls.scss");
                        public static readonly string _screenreaders_scss = Url("_screenreaders.scss");
                        public static readonly string _spacing_scss = Url("_spacing.scss");
                        public static readonly string _text_scss = Url("_text.scss");
                        public static readonly string _visibility_scss = Url("_visibility.scss");
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class bootstrap_rtl {
                public const string UrlPath = "~/Content/css/bootstrap-rtl";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class dist {
                    public const string UrlPath = "~/Content/css/bootstrap-rtl/dist";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string bootstrap_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-rtl.min.css") ? Url("bootstrap-rtl.min.css") : Url("bootstrap-rtl.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class scss {
                    public const string UrlPath = "~/Content/css/bootstrap-rtl/scss";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string alerts_rtl_scss = Url("alerts-rtl.scss");
                    public static readonly string badges_rtl_scss = Url("badges-rtl.scss");
                    public static readonly string bootstrap_rtl_scss = Url("bootstrap-rtl.scss");
                    public static readonly string breadcrumbs_rtl_scss = Url("breadcrumbs-rtl.scss");
                    public static readonly string button_groups_rtl_scss = Url("button-groups-rtl.scss");
                    public static readonly string carousel_rtl_scss = Url("carousel-rtl.scss");
                    public static readonly string close_rtl_scss = Url("close-rtl.scss");
                    public static readonly string dropdowns_rtl_scss = Url("dropdowns-rtl.scss");
                    public static readonly string forms_rtl_scss = Url("forms-rtl.scss");
                    public static readonly string grid_rtl_scss = Url("grid-rtl.scss");
                    public static readonly string input_groups_rtl_scss = Url("input-groups-rtl.scss");
                    public static readonly string list_group_rtl_scss = Url("list-group-rtl.scss");
                    public static readonly string media_rtl_scss = Url("media-rtl.scss");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class mixins {
                        public const string UrlPath = "~/Content/css/bootstrap-rtl/scss/mixins";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string grid_framework_rtl_scss = Url("grid-framework-rtl.scss");
                        public static readonly string grid_rtl_scss = Url("grid-rtl.scss");
                    }
                
                    public static readonly string mixins_rtl_scss = Url("mixins-rtl.scss");
                    public static readonly string modals_rtl_scss = Url("modals-rtl.scss");
                    public static readonly string navbar_rtl_scss = Url("navbar-rtl.scss");
                    public static readonly string navs_rtl_scss = Url("navs-rtl.scss");
                    public static readonly string normalize_rtl_scss = Url("normalize-rtl.scss");
                    public static readonly string pager_rtl_scss = Url("pager-rtl.scss");
                    public static readonly string pagination_rtl_scss = Url("pagination-rtl.scss");
                    public static readonly string popovers_rtl_scss = Url("popovers-rtl.scss");
                    public static readonly string progress_rtl_scss = Url("progress-rtl.scss");
                    public static readonly string responsive_embed_rtl_scss = Url("responsive-embed-rtl.scss");
                    public static readonly string tables_rtl_scss = Url("tables-rtl.scss");
                    public static readonly string type_rtl_scss = Url("type-rtl.scss");
                    public static readonly string utilities_rtl_scss = Url("utilities-rtl.scss");
                    public static readonly string variables_rtl_scss = Url("variables-rtl.scss");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class font_awesome {
                public const string UrlPath = "~/Content/css/font-awesome";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class css {
                    public const string UrlPath = "~/Content/css/font-awesome/css";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string font_awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/font-awesome.min.css") ? Url("font-awesome.min.css") : Url("font-awesome.css");
                    public static readonly string font_awesome_css_map = Url("font-awesome.css.map");
                    public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class fonts {
                    public const string UrlPath = "~/Content/css/font-awesome/fonts";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string fontawesome_webfont_eot = Url("fontawesome-webfont.eot");
                    public static readonly string fontawesome_webfont_svg = Url("fontawesome-webfont.svg");
                    public static readonly string fontawesome_webfont_ttf = Url("fontawesome-webfont.ttf");
                    public static readonly string fontawesome_webfont_woff = Url("fontawesome-webfont.woff");
                    public static readonly string fontawesome_webfont_woff2 = Url("fontawesome-webfont.woff2");
                    public static readonly string FontAwesome_otf = Url("FontAwesome.otf");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                public const string UrlPath = "~/Content/css/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class poppins {
                    public const string UrlPath = "~/Content/css/fonts/poppins";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string _400_eot = Url("400.eot");
                    public static readonly string _400_svg = Url("400.svg");
                    public static readonly string _400_ttf = Url("400.ttf");
                    public static readonly string _400_woff = Url("400.woff");
                    public static readonly string _400_woff2 = Url("400.woff2");
                    public static readonly string _700_eot = Url("700.eot");
                    public static readonly string _700_svg = Url("700.svg");
                    public static readonly string _700_ttf = Url("700.ttf");
                    public static readonly string _700_woff = Url("700.woff");
                    public static readonly string _700_woff2 = Url("700.woff2");
                    public static readonly string font_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/font.min.css") ? Url("font.min.css") : Url("font.css");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class glyphicons {
                public const string UrlPath = "~/Content/css/glyphicons";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
                public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
                public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
                public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
                public static readonly string glyphicons_halflings_regular_woff2 = Url("glyphicons-halflings-regular.woff2");
                public static readonly string glyphicons_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/glyphicons.min.css") ? Url("glyphicons.min.css") : Url("glyphicons.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class material_design_icons {
                public const string UrlPath = "~/Content/css/material-design-icons";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class iconfont {
                    public const string UrlPath = "~/Content/css/material-design-icons/iconfont";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string codepoints = Url("codepoints");
                    public static readonly string codepoints_txt = Url("codepoints.txt");
                    public static readonly string iconjar_map_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/iconjar-map.min.js") ? Url("iconjar-map.min.js") : Url("iconjar-map.js");
                    public static readonly string MaterialIcons_Regular_eot = Url("MaterialIcons-Regular.eot");
                    public static readonly string MaterialIcons_Regular_ijmap_txt = Url("MaterialIcons-Regular.ijmap.txt");
                    public static readonly string MaterialIcons_Regular_ttf = Url("MaterialIcons-Regular.ttf");
                    public static readonly string MaterialIcons_Regular_woff = Url("MaterialIcons-Regular.woff");
                    public static readonly string MaterialIcons_Regular_woff2 = Url("MaterialIcons-Regular.woff2");
                    public static readonly string README_md = Url("README.md");
                    public static readonly string README_md_txt = Url("README.md.txt");
                }
            
                public static readonly string material_design_icons_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/material-design-icons.min.css") ? Url("material-design-icons.min.css") : Url("material-design-icons.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class scss {
                public const string UrlPath = "~/Content/css/scss";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string app_rtl_scss = Url("app.rtl.scss");
                public static readonly string app_scss = Url("app.scss");
                public static readonly string bootstrap_scss = Url("bootstrap.scss");
                public static readonly string bs_base_scss = Url("bs.base.scss");
                public static readonly string bs_button_scss = Url("bs.button.scss");
                public static readonly string bs_card_scss = Url("bs.card.scss");
                public static readonly string bs_carousel_scss = Url("bs.carousel.scss");
                public static readonly string bs_dropdown_scss = Url("bs.dropdown.scss");
                public static readonly string bs_form_scss = Url("bs.form.scss");
                public static readonly string bs_label_scss = Url("bs.label.scss");
                public static readonly string bs_list_group_scss = Url("bs.list-group.scss");
                public static readonly string bs_modal_animation_scss = Url("bs.modal.animation.scss");
                public static readonly string bs_modal_scss = Url("bs.modal.scss");
                public static readonly string bs_nav_scss = Url("bs.nav.scss");
                public static readonly string bs_navbar_scss = Url("bs.navbar.scss");
                public static readonly string bs_pager_scss = Url("bs.pager.scss");
                public static readonly string bs_progress_scss = Url("bs.progress.scss");
                public static readonly string bs_row_scss = Url("bs.row.scss");
                public static readonly string bs_scss = Url("bs.scss");
                public static readonly string bs_table_scss = Url("bs.table.scss");
                public static readonly string md_btn_scss = Url("md.btn.scss");
                public static readonly string md_check_scss = Url("md.check.scss");
                public static readonly string md_color_scss = Url("md.color.scss");
                public static readonly string md_input_scss = Url("md.input.scss");
                public static readonly string md_scss = Url("md.scss");
                public static readonly string md_switch_scss = Url("md.switch.scss");
                public static readonly string mixins_scss = Url("mixins.scss");
                public static readonly string mixins_theme_scss = Url("mixins.theme.scss");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class theme {
                    public const string UrlPath = "~/Content/css/scss/theme";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string accent_scss = Url("accent.scss");
                    public static readonly string blue_scss = Url("blue.scss");
                    public static readonly string danger_scss = Url("danger.scss");
                    public static readonly string info_scss = Url("info.scss");
                    public static readonly string primary_scss = Url("primary.scss");
                    public static readonly string success_scss = Url("success.scss");
                    public static readonly string warn_scss = Url("warn.scss");
                    public static readonly string warning_scss = Url("warning.scss");
                }
            
                public static readonly string ui_arrow_scss = Url("ui.arrow.scss");
                public static readonly string ui_avatar_scss = Url("ui.avatar.scss");
                public static readonly string ui_box_scss = Url("ui.box.scss");
                public static readonly string ui_check_scss = Url("ui.check.scss");
                public static readonly string ui_col_scss = Url("ui.col.scss");
                public static readonly string ui_color_dark_scss = Url("ui.color.dark.scss");
                public static readonly string ui_color_scss = Url("ui.color.scss");
                public static readonly string ui_flexbox_scss = Url("ui.flexbox.scss");
                public static readonly string ui_icon_scss = Url("ui.icon.scss");
                public static readonly string ui_item_scss = Url("ui.item.scss");
                public static readonly string ui_layout_boxed_scss = Url("ui.layout.boxed.scss");
                public static readonly string ui_layout_scss = Url("ui.layout.scss");
                public static readonly string ui_list_scss = Url("ui.list.scss");
                public static readonly string ui_loading_scss = Url("ui.loading.scss");
                public static readonly string ui_nav_active_scss = Url("ui.nav.active.scss");
                public static readonly string ui_nav_plus_scss = Url("ui.nav.plus.scss");
                public static readonly string ui_nav_scss = Url("ui.nav.scss");
                public static readonly string ui_page_scss = Url("ui.page.scss");
                public static readonly string ui_plugin_scss = Url("ui.plugin.scss");
                public static readonly string ui_scss = Url("ui.scss");
                public static readonly string ui_streamline_scss = Url("ui.streamline.scss");
                public static readonly string ui_switch_scss = Url("ui.switch.scss");
                public static readonly string ui_timeline_scss = Url("ui.timeline.scss");
                public static readonly string util_base_scss = Url("util.base.scss");
                public static readonly string util_border_scss = Url("util.border.scss");
                public static readonly string util_hover_scss = Url("util.hover.scss");
                public static readonly string util_radius_scss = Url("util.radius.scss");
                public static readonly string util_scroll_scss = Url("util.scroll.scss");
                public static readonly string util_size_scss = Url("util.size.scss");
                public static readonly string util_spacing_scss = Url("util.spacing.scss");
                public static readonly string util_text_scss = Url("util.text.scss");
                public static readonly string utils_scss = Url("utils.scss");
                public static readonly string variables_md_scss = Url("variables.md.scss");
                public static readonly string variables_scss = Url("variables.scss");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class styles {
                public const string UrlPath = "~/Content/css/styles";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string app_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/app.min.css") ? Url("app.min.css") : Url("app.css");
                public static readonly string app_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/app.rtl.min.css") ? Url("app.rtl.min.css") : Url("app.rtl.css");
                public static readonly string font_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/font.min.css") ? Url("font.min.css") : Url("font.css");
                public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/style.min.css") ? Url("style.min.css") : Url("style.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class theme {
                public const string UrlPath = "~/Content/css/theme";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string accent_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/accent.min.css") ? Url("accent.min.css") : Url("accent.css");
                public static readonly string blue_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/blue.min.css") ? Url("blue.min.css") : Url("blue.css");
                public static readonly string danger_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/danger.min.css") ? Url("danger.min.css") : Url("danger.css");
                public static readonly string info_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/info.min.css") ? Url("info.min.css") : Url("info.css");
                public static readonly string primary_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/primary.min.css") ? Url("primary.min.css") : Url("primary.css");
                public static readonly string success_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/success.min.css") ? Url("success.min.css") : Url("success.css");
                public static readonly string warn_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/warn.min.css") ? Url("warn.min.css") : Url("warn.css");
                public static readonly string warning_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/warning.min.css") ? Url("warning.min.css") : Url("warning.css");
            }
        
        }
    
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
        public static readonly string StyleAdminPresentationPage_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/StyleAdminPresentationPage.min.css") ? Url("StyleAdminPresentationPage.min.css") : Url("StyleAdminPresentationPage.css");
        public static readonly string StyleFormEdit_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/StyleFormEdit.min.css") ? Url("StyleFormEdit.min.css") : Url("StyleFormEdit.css");
        public static readonly string StyleItemDelete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/StyleItemDelete.min.css") ? Url("StyleItemDelete.min.css") : Url("StyleItemDelete.css");
        public static readonly string StyleSpinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/StyleSpinner.min.css") ? Url("StyleSpinner.min.css") : Url("StyleSpinner.css");
        public static readonly string StyleTrackCreate_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/StyleTrackCreate.min.css") ? Url("StyleTrackCreate.min.css") : Url("StyleTrackCreate.css");
        public static readonly string SyleCheckbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/SyleCheckbox.min.css") ? Url("SyleCheckbox.min.css") : Url("SyleCheckbox.css");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class esm 
            {
                public static class Assets
                {
                    public static readonly string popper_utils_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/esm/popper-utils.js"); 
                    public static readonly string popper_utils_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/esm/popper-utils.min.js"); 
                    public static readonly string popper_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/esm/popper.js"); 
                    public static readonly string popper_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/esm/popper.min.js"); 
                }
            }
            public static partial class src 
            {
                public static partial class methods 
                {
                    public static class Assets
                    {
                        public static readonly string defaults_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/methods/defaults.js"); 
                        public static readonly string destroy_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/methods/destroy.js"); 
                        public static readonly string disableEventListeners_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/methods/disableEventListeners.js"); 
                        public static readonly string enableEventListeners_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/methods/enableEventListeners.js"); 
                        public static readonly string placements_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/methods/placements.js"); 
                        public static readonly string update_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/methods/update.js"); 
                    }
                }
                public static partial class modifiers 
                {
                    public static class Assets
                    {
                        public static readonly string applyStyle_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/modifiers/applyStyle.js"); 
                        public static readonly string arrow_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/modifiers/arrow.js"); 
                        public static readonly string computeStyle_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/modifiers/computeStyle.js"); 
                        public static readonly string flip_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/modifiers/flip.js"); 
                        public static readonly string hide_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/modifiers/hide.js"); 
                        public static readonly string index_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/modifiers/index.js"); 
                        public static readonly string inner_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/modifiers/inner.js"); 
                        public static readonly string keepTogether_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/modifiers/keepTogether.js"); 
                        public static readonly string offset_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/modifiers/offset.js"); 
                        public static readonly string preventOverflow_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/modifiers/preventOverflow.js"); 
                        public static readonly string shift_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/modifiers/shift.js"); 
                    }
                }
                public static partial class utils 
                {
                    public static class Assets
                    {
                        public static readonly string clockwise_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/clockwise.js"); 
                        public static readonly string computeAutoPlacement_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/computeAutoPlacement.js"); 
                        public static readonly string debounce_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/debounce.js"); 
                        public static readonly string find_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/find.js"); 
                        public static readonly string findCommonOffsetParent_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/findCommonOffsetParent.js"); 
                        public static readonly string findIndex_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/findIndex.js"); 
                        public static readonly string getBordersSize_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getBordersSize.js"); 
                        public static readonly string getBoundaries_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getBoundaries.js"); 
                        public static readonly string getBoundingClientRect_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getBoundingClientRect.js"); 
                        public static readonly string getClientRect_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getClientRect.js"); 
                        public static readonly string getFixedPositionOffsetParent_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getFixedPositionOffsetParent.js"); 
                        public static readonly string getOffsetParent_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getOffsetParent.js"); 
                        public static readonly string getOffsetRect_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getOffsetRect.js"); 
                        public static readonly string getOffsetRectRelativeToArbitraryNode_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getOffsetRectRelativeToArbitraryNode.js"); 
                        public static readonly string getOppositePlacement_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getOppositePlacement.js"); 
                        public static readonly string getOppositeVariation_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getOppositeVariation.js"); 
                        public static readonly string getOuterSizes_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getOuterSizes.js"); 
                        public static readonly string getParentNode_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getParentNode.js"); 
                        public static readonly string getPopperOffsets_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getPopperOffsets.js"); 
                        public static readonly string getReferenceNode_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getReferenceNode.js"); 
                        public static readonly string getReferenceOffsets_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getReferenceOffsets.js"); 
                        public static readonly string getRoot_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getRoot.js"); 
                        public static readonly string getRoundedOffsets_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getRoundedOffsets.js"); 
                        public static readonly string getScroll_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getScroll.js"); 
                        public static readonly string getScrollParent_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getScrollParent.js"); 
                        public static readonly string getStyleComputedProperty_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getStyleComputedProperty.js"); 
                        public static readonly string getSupportedPropertyName_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getSupportedPropertyName.js"); 
                        public static readonly string getViewportOffsetRectRelativeToArtbitraryNode_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js"); 
                        public static readonly string getWindow_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getWindow.js"); 
                        public static readonly string getWindowSizes_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/getWindowSizes.js"); 
                        public static readonly string includeScroll_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/includeScroll.js"); 
                        public static readonly string index_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/index.js"); 
                        public static readonly string isBrowser_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/isBrowser.js"); 
                        public static readonly string isFixed_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/isFixed.js"); 
                        public static readonly string isFunction_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/isFunction.js"); 
                        public static readonly string isIE_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/isIE.js"); 
                        public static readonly string isModifierEnabled_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/isModifierEnabled.js"); 
                        public static readonly string isModifierRequired_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/isModifierRequired.js"); 
                        public static readonly string isNumeric_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/isNumeric.js"); 
                        public static readonly string isOffsetContainer_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/isOffsetContainer.js"); 
                        public static readonly string removeEventListeners_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/removeEventListeners.js"); 
                        public static readonly string runModifiers_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/runModifiers.js"); 
                        public static readonly string setAttributes_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/setAttributes.js"); 
                        public static readonly string setStyles_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/setStyles.js"); 
                        public static readonly string setupEventListeners_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/utils/setupEventListeners.js"); 
                    }
                }
                public static class Assets
                {
                    public static readonly string index_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/src/index.js"); 
                }
            }
            public static partial class umd 
            {
                public static class Assets
                {
                    public static readonly string popper_utils_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/umd/popper-utils.js"); 
                    public static readonly string popper_utils_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/umd/popper-utils.min.js"); 
                    public static readonly string popper_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/umd/popper.js"); 
                    public static readonly string popper_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/umd/popper.min.js"); 
                }
            }
            public static class Assets
            {
                public static readonly string bootstrap_bundle_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.bundle.js"); 
                public static readonly string bootstrap_bundle_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.bundle.min.js"); 
                public static readonly string bootstrap_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.js"); 
                public static readonly string bootstrap_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.min.js"); 
                public static readonly string jquery_3_4_1_intellisense_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.4.1.intellisense.js"); 
                public static readonly string jquery_3_4_1_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.4.1.js"); 
                public static readonly string jquery_3_4_1_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.4.1.min.js"); 
                public static readonly string jquery_3_4_1_slim_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.4.1.slim.js"); 
                public static readonly string jquery_3_4_1_slim_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.4.1.slim.min.js"); 
                public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.unobtrusive-ajax.js"); 
                public static readonly string jquery_unobtrusive_ajax_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.unobtrusive-ajax.min.js"); 
                public static readonly string jquery_validate_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.js"); 
                public static readonly string jquery_validate_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.min.js"); 
                public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.unobtrusive.js"); 
                public static readonly string jquery_validate_unobtrusive_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.unobtrusive.min.js"); 
                public static readonly string JSButtonPlayMusic_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/JSButtonPlayMusic.js"); 
                public static readonly string JSCheckbox_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/JSCheckbox.js"); 
                public static readonly string JSTrackCreate_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/JSTrackCreate.js"); 
                public static readonly string modernizr_2_8_3_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/modernizr-2.8.3.js"); 
                public static readonly string popper_utils_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/popper-utils.js"); 
                public static readonly string popper_utils_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/popper-utils.min.js"); 
                public static readonly string popper_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/popper.js"); 
                public static readonly string popper_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/popper.min.js"); 
                public static readonly string ScriptSpinnerHidden_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/ScriptSpinnerHidden.js"); 
                public static readonly string ScriptSpinnerVisible_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/ScriptSpinnerVisible.js"); 
                public static readonly string SolutionAjaxForm_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/SolutionAjaxForm.js"); 
            }
        }
        public static partial class Content 
        {
            public static partial class css 
            {
                public static partial class animate_css 
                {
                    public static class Assets
                    {
                        public static readonly string animate_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/animate.css/animate.min.css");
                    }
                }
                public static partial class bootstrap 
                {
                    public static partial class dist 
                    {
                        public static partial class css 
                        {
                            public static class Assets
                            {
                                public static readonly string bootstrap_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/bootstrap/dist/css/bootstrap.css");
                                public static readonly string bootstrap_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/bootstrap/dist/css/bootstrap.min.css");
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class scss 
                    {
                        public static partial class mixins 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class utilities 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class bootstrap_rtl 
                {
                    public static partial class dist 
                    {
                        public static class Assets
                        {
                            public static readonly string bootstrap_rtl_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/bootstrap-rtl/dist/bootstrap-rtl.css");
                        }
                    }
                    public static partial class scss 
                    {
                        public static partial class mixins 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class font_awesome 
                {
                    public static partial class css 
                    {
                        public static class Assets
                        {
                            public static readonly string font_awesome_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/font-awesome/css/font-awesome.css");
                            public static readonly string font_awesome_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/font-awesome/css/font-awesome.min.css");
                        }
                    }
                    public static partial class fonts 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class fonts 
                {
                    public static partial class poppins 
                    {
                        public static class Assets
                        {
                            public static readonly string font_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/fonts/poppins/font.css");
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class glyphicons 
                {
                    public static class Assets
                    {
                        public static readonly string glyphicons_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/glyphicons/glyphicons.css");
                    }
                }
                public static partial class material_design_icons 
                {
                    public static partial class iconfont 
                    {
                        public static class Assets
                        {
                            public static readonly string iconjar_map_js = T4MVCHelpers.ProcessAssetPath("~/Content/css/material-design-icons/iconfont/iconjar-map.js"); 
                        }
                    }
                    public static class Assets
                    {
                        public static readonly string material_design_icons_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/material-design-icons/material-design-icons.css");
                    }
                }
                public static partial class scss 
                {
                    public static partial class theme 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class styles 
                {
                    public static class Assets
                    {
                        public static readonly string app_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/styles/app.css");
                        public static readonly string app_rtl_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/styles/app.rtl.css");
                        public static readonly string font_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/styles/font.css");
                        public static readonly string style_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/styles/style.css");
                    }
                }
                public static partial class theme 
                {
                    public static class Assets
                    {
                        public static readonly string accent_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/theme/accent.css");
                        public static readonly string blue_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/theme/blue.css");
                        public static readonly string danger_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/theme/danger.css");
                        public static readonly string info_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/theme/info.css");
                        public static readonly string primary_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/theme/primary.css");
                        public static readonly string success_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/theme/success.css");
                        public static readonly string warn_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/theme/warn.css");
                        public static readonly string warning_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/theme/warning.css");
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public static readonly string bootstrap_grid_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap-grid.css");
                public static readonly string bootstrap_grid_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap-grid.min.css");
                public static readonly string bootstrap_reboot_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap-reboot.css");
                public static readonly string bootstrap_reboot_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap-reboot.min.css");
                public static readonly string bootstrap_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap.css");
                public static readonly string bootstrap_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap.min.css");
                public static readonly string ColorValidation_css = T4MVCHelpers.ProcessAssetPath("~/Content/ColorValidation.css");
                public static readonly string Site_css = T4MVCHelpers.ProcessAssetPath("~/Content/Site.css");
                public static readonly string StyleAdminPresentationPage_css = T4MVCHelpers.ProcessAssetPath("~/Content/StyleAdminPresentationPage.css");
                public static readonly string StyleFormEdit_css = T4MVCHelpers.ProcessAssetPath("~/Content/StyleFormEdit.css");
                public static readonly string StyleItemDelete_css = T4MVCHelpers.ProcessAssetPath("~/Content/StyleItemDelete.css");
                public static readonly string StyleSpinner_css = T4MVCHelpers.ProcessAssetPath("~/Content/StyleSpinner.css");
                public static readonly string StyleTrackCreate_css = T4MVCHelpers.ProcessAssetPath("~/Content/StyleTrackCreate.css");
                public static readonly string SyleCheckbox_css = T4MVCHelpers.ProcessAssetPath("~/Content/SyleCheckbox.css");
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    private static string ProcessAssetPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and should retain this prefix
        return virtualPath;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;
    public static Func<string, string> ProcessAssetPath = ProcessAssetPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


